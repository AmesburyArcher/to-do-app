(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{N:()=>x,s:()=>w});const t=()=>{document.querySelector(".current-date").textContent=n()};function n(){const e=new Date;let t=1==e.getMinutes().toString().length?"0"+e.getMinutes():e.getMinutes(),n=1==e.getHours().toString().length?"0"+e.getHours():e.getHours(),o=e.getHours()>=12?"pm":"am";return["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][e.getDay()]+" "+["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.getMonth()]+" "+e.getDate()+" "+e.getFullYear()+" "+n+":"+t+o}const o=document.querySelector("#to-do-list"),s=document.querySelector(".to-do-title"),r=document.querySelector(".task-count"),a=document.querySelector(".tasks"),c=document.querySelector("#task-template"),i=e=>{const t=e.tasks.filter((e=>!e.complete)).length,n=1===t?"task":"tasks";r.textContent=`${t} ${n} remaining`},l=()=>{const e=g.find((e=>e.id===v));null==e?o.style.display="none":(o.style.display="",s.textContent=e.name,i(e),h(a),e.tasks.forEach((e=>{const t=document.importNode(c.content,!0),n=t.querySelector("input");n.id=e.id,n.checked=e.complete,t.querySelector(".task-name").textContent=e.name;const o=t.querySelector(".task-desc");e.desc?o.textContent=` Description: ${e.desc}`:o.textContent="No Description.";const s=t.querySelector(".task-date");e.date?s.textContent=` Complete by: ${e.date}`:s.textContent="No Completion Date.",t.querySelector(".task-posted").textContent=`Posted on: ${e.posted}`,t.querySelector(".edit-task").innerHTML='<svg xmlns="http://www.w3.org/2000/svg" class="edit-task-icon" width="20" height="20" viewBox="0 0 24 24" stroke-width="1.5" stroke="#000000" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" /><line x1="13.5" y1="6.5" x2="17.5" y2="10.5" /></svg>',a.appendChild(t)})))},d=(e,t,n,o)=>({id:Date.now().toString(),name:e,desc:t,date:n,posted:o,complete:!1}),u="task.list",m="task.selectedFolder";let v=localStorage.getItem(m),g=JSON.parse(localStorage.getItem(u))||[];const y=()=>{p(),k()},p=()=>{localStorage.setItem(u,JSON.stringify(g)),localStorage.setItem(m,v)},k=()=>{const e=document.querySelector(".directory");h(e),g.forEach((t=>{const n=x("li",null,["directory-folder"],t.name);n.dataset.listId=t.id,t.id===v&&n.classList.add("directory-active"),e.appendChild(n);const o=x("span",null,["directory-folder-icons"],null);o.innerHTML='<button class="button-edit"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-edit" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" /><line x1="13.5" y1="6.5" x2="17.5" y2="10.5" /></svg></button><button class="button-trash"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-trash" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><line x1="4" y1="7" x2="20" y2="7" /><line x1="10" y1="11" x2="10" y2="17" /><line x1="14" y1="11" x2="14" y2="17" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg></button>',n.classList.contains("directory-active")&&n.appendChild(o)}))},h=e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},f=e=>{const t=document.querySelector(".add-dir-btn-text");e.preventDefault();const n=t.value;if(null==n||""===n)return;const o=E(n);t.value=null,g.push(o),y()},S=e=>{"li"===e.target.tagName.toLowerCase()&&(v=e.target.dataset.listId,y(),l())},L=e=>{(e.target.classList.contains("icon-trash")||e.target.classList.contains("button-trash"))&&(e.target.parentElement.parentElement.parentElement.dataset.listId!==v&&e.target.parentElement.parentElement.dataset.listId!==v||(g=g.filter((e=>e.id!==v)),v=null,w()))},q=e=>{if((e.target.classList.contains("icon-edit")||e.target.classList.contains("button-edit"))&&(e.target.parentElement.parentElement.parentElement.dataset.listId===v||e.target.parentElement.parentElement.dataset.listId===v)){const e=document.querySelector(".directory-modal-container");e.classList.toggle("active");const t=document.querySelector("#directory-edit-form"),n=document.querySelector(".icon-tabler-square-x"),o=n=>{n.preventDefault();const s=document.querySelector("#text-dir"),r=s.value;null!=r&&""!==r&&(g.forEach((e=>{e.id===v&&(e.name=r)})),s.value=null,y(),l(),e.classList.remove("active"),t.removeEventListener("submit",o))},s=()=>{e.classList.remove("active"),t.removeEventListener("submit",o),n.removeEventListener("click",s)};n.addEventListener("click",s),t.addEventListener("submit",o)}},E=e=>({id:Date.now().toString(),name:e,tasks:[]});function x(e,t,n,o){const s=document.createElement(e);return t&&(s.id=t),n&&n.forEach((e=>s.classList.add(e))),o&&(s.textContent=o),s}const w=()=>{y(),l()};setInterval(t,1e3),(()=>{const e=document.querySelector(".light-dark-mode");e.addEventListener("click",(function(){document.body.classList.toggle("active"),e.classList.toggle("active");const t=document.querySelector(".current-theme");e.classList.contains("active")?t.textContent="Dark Mode":t.textContent="Light Mode"}))})(),w(),(()=>{const e=document.querySelector("#add-dir-form"),t=document.querySelector(".directory");e.addEventListener("submit",f),t.addEventListener("click",S),t.addEventListener("click",L),t.addEventListener("click",q)})(),document.querySelector(".create-task-btn").addEventListener("click",(()=>{document.querySelector(".modal-container").classList.add("active")})),document.querySelector("#add-task").addEventListener("submit",(e=>{e.preventDefault();const t=document.querySelector(".modal-container"),o=document.querySelector("#task"),s=document.querySelector("#description"),r=document.querySelector("#date"),a=n(),c=o.value;if(null==c||""===c)return;const i=s.value,l=r.value,u=d(c,i,l,a);o.value=null,s.value=null,r.value=null,g.find((e=>e.id===v)).tasks.push(u),t.classList.remove("active"),w()})),a.addEventListener("click",(e=>{if("input"===e.target.tagName.toLowerCase()){const t=g.find((e=>e.id===v));t.tasks.find((t=>t.id===e.target.id)).complete=e.target.checked,p(),i(t)}})),a.addEventListener("click",(e=>{const t=g.find((e=>e.id===v)),n=e.target.parentNode.parentNode,o=Array.from(n.parentNode.children).indexOf(n),s=document.querySelector(".task-edit"),r=document.querySelector(".description-edit"),a=document.querySelector(".date-edit");let c=t.tasks[o];const i=document.querySelector(".modal-container-edit"),d=document.querySelector("#add-task-edit");if(e.target.classList.contains("edit-task-icon")||e.target.classList.contains("edit-task")){s.value=c.name,c.desc?r.value=c.desc:r.value="",c.date?a.value=c.date:a.value="",i.classList.add("active");const e=t=>{console.log(o),t.preventDefault(),c.name=s.value,c.desc=r.value,c.date=a.value,c="",console.log(c),i.classList.remove("active"),d.removeEventListener("submit",e),l(),p()},t=()=>{d.removeEventListener("submit",e),i.classList.remove("active"),n.removeEventListener("click",t)},n=document.querySelector(".close-task-modal-edit");n.addEventListener("click",t),d.addEventListener("submit",e)}})),document.querySelector(".delete-tasks").addEventListener("click",(()=>{const e=g.find((e=>e.id===v));e.tasks=e.tasks.filter((e=>!e.complete)),w()})),document.querySelector(".close-task-modal").addEventListener("click",(()=>{document.querySelector(".modal-container").classList.remove("active")})),t()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,