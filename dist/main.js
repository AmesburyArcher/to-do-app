(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{N:()=>I,s:()=>M});const t=()=>{document.querySelector(".current-date").textContent=n()};function n(){const e=new Date;let t=1==e.getMinutes().toString().length?"0"+e.getMinutes():e.getMinutes(),n=1==e.getHours().toString().length?"0"+e.getHours():e.getHours(),o=e.getHours()>=12?"pm":"am";return["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][e.getDay()]+" "+["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.getMonth()]+" "+e.getDate()+" "+e.getFullYear()+" "+n+":"+t+o}const o=document.querySelector("#to-do-list"),a=document.querySelector(".to-do-title"),r=document.querySelector(".task-count"),s=document.querySelector(".tasks"),d=document.querySelector("#task-template"),i=e=>{const t=e.tasks.filter((e=>!e.complete)).length,n=1===t?"task":"tasks";r.textContent=`${t} ${n} remaining`},l=e=>{const t=k.find((e=>e.id===p)),n=e.target.parentNode.parentNode,o=Array.from(n.parentNode.children).indexOf(n),a=document.querySelector(".task-edit"),r=document.querySelector(".description-edit"),s=document.querySelector(".date-edit");let d=t.tasks[o];const i=document.querySelector(".modal-container-edit"),l=document.querySelector("#add-task-edit");if(e.target.classList.contains("edit-task-icon")||e.target.classList.contains("edit-task")){a.value=d.name,d.desc?r.value=d.desc:r.value="",d.date?s.value=d.date:s.value="",i.classList.add("active");const e=t=>{t.preventDefault(),d.name=a.value,d.desc=r.value,d.date=s.value,d="",i.classList.remove("active"),l.removeEventListener("submit",e),c(),S()},t=()=>{l.removeEventListener("submit",e),i.classList.remove("active"),n.removeEventListener("click",t)},n=document.querySelector(".close-task-modal-edit");n.addEventListener("click",t),l.addEventListener("submit",e)}},c=()=>{const e=k.find((e=>e.id===p));null==e?o.style.display="none":(o.style.display="",a.textContent=e.name,i(e),h(s),e.tasks.forEach((e=>{const t=document.importNode(d.content,!0),n=t.querySelector("input");n.id=e.id,n.checked=e.complete,t.querySelector(".task-name").textContent=e.name;const o=t.querySelector(".task-desc");e.desc?o.textContent=` Description: ${e.desc}`:o.textContent="No Description";const a=t.querySelector(".task-date");e.date?a.textContent=` Complete by: ${e.date}`:a.textContent="No Completion Date",t.querySelector(".task-posted").textContent=`Posted on: ${e.posted}`,t.querySelector(".edit-task").innerHTML='<svg xmlns="http://www.w3.org/2000/svg" class="edit-task-icon" width="20" height="20" viewBox="0 0 24 24" stroke-width="1.5" stroke="#000000" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" /><line x1="13.5" y1="6.5" x2="17.5" y2="10.5" /></svg>',s.appendChild(t)})))},u=e=>{e.preventDefault();const t=document.querySelector(".modal-container"),o=document.querySelector("#task"),a=document.querySelector("#description"),r=document.querySelector("#date"),s=n(),d=o.value;if(null==d||""===d)return;const i=a.value,l=r.value,c=m(d,i,l,s);o.value=null,a.value=null,r.value=null,k.find((e=>e.id===p)).tasks.push(c),t.classList.remove("active"),M()},m=(e,t,n,o)=>({id:Date.now().toString(),name:e,desc:t,date:n,posted:o,complete:!1}),v="task.list",y="task.selectedFolder";let p=localStorage.getItem(y),k=JSON.parse(localStorage.getItem(v))||[];const g=()=>{S(),f()},S=()=>{localStorage.setItem(v,JSON.stringify(k)),localStorage.setItem(y,p)},f=()=>{const e=document.querySelector(".directory");h(e),k.forEach((t=>{const n=I("li",null,["directory-folder"],t.name);n.dataset.listId=t.id,t.id===p&&n.classList.add("directory-active"),e.appendChild(n);const o=I("span",null,["directory-folder-icons"],null);o.innerHTML='<button class="button-edit"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-edit" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" /><line x1="13.5" y1="6.5" x2="17.5" y2="10.5" /></svg></button><button class="button-trash"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-trash" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><line x1="4" y1="7" x2="20" y2="7" /><line x1="10" y1="11" x2="10" y2="17" /><line x1="14" y1="11" x2="14" y2="17" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg></button>',n.classList.contains("directory-active")&&n.appendChild(o)}))},h=e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},L=e=>{const t=document.querySelector(".add-dir-btn-text");e.preventDefault();const n=t.value;if(null==n||""===n)return;const o=x(n);t.value=null,k.push(o),g()},q=e=>{"li"===e.target.tagName.toLowerCase()&&(p=e.target.dataset.listId,g(),c())},E=e=>{(e.target.classList.contains("icon-trash")||e.target.classList.contains("button-trash"))&&(e.target.parentElement.parentElement.parentElement.dataset.listId!==p&&e.target.parentElement.parentElement.dataset.listId!==p||(k=k.filter((e=>e.id!==p)),p=null,M()))},b=e=>{if((e.target.classList.contains("icon-edit")||e.target.classList.contains("button-edit"))&&(e.target.parentElement.parentElement.parentElement.dataset.listId===p||e.target.parentElement.parentElement.dataset.listId===p)){const e=document.querySelector(".directory-modal-container");e.classList.toggle("active");const t=document.querySelector("#directory-edit-form"),n=document.querySelector(".icon-tabler-square-x"),o=n=>{n.preventDefault();const a=document.querySelector("#text-dir"),r=a.value;null!=r&&""!==r&&(k.forEach((e=>{e.id===p&&(e.name=r)})),a.value=null,g(),c(),e.classList.remove("active"),t.removeEventListener("submit",o))},a=()=>{e.classList.remove("active"),t.removeEventListener("submit",o),n.removeEventListener("click",a)};n.addEventListener("click",a),t.addEventListener("submit",o)}},x=e=>({id:Date.now().toString(),name:e,tasks:[]}),w=()=>{const e=document.querySelector("#date"),t=document.querySelector("#add-task");let n=(new Date).toISOString().slice(0,10).split("-"),o=e.value;return o=o.split("-"),n=parseInt(n.join("")),o=parseInt(o.join("")),n-o<=1?(e.setCustomValidity(""),t.addEventListener("submit",u),!1):(e.setCustomValidity("Inputted date must be equal to current date or beyond"),e.reportValidity(),t.removeEventListener("submit",u),!0)},C=()=>{const e=document.querySelector(".date-edit"),t=document.querySelector("#add-task-edit");let n=(new Date).toISOString().slice(0,10).split("-"),o=e.value;return o=o.split("-"),n=parseInt(n.join("")),o=parseInt(o.join("")),n-o<=1?(e.setCustomValidity(""),t.addEventListener("submit",l),!1):(e.setCustomValidity("Inputted date must be equal to current date or beyond"),e.reportValidity(),t.removeEventListener("submit",l),!0)};function I(e,t,n,o){const a=document.createElement(e);return t&&(a.id=t),n&&n.forEach((e=>a.classList.add(e))),o&&(a.textContent=o),a}const M=()=>{g(),c()};setInterval(t,1e3),(()=>{const e=document.querySelector(".light-dark-mode");e.addEventListener("click",(function(){t=localStorage.getItem("darkMode"),"enabled"!==t?(localStorage.setItem("darkMode","enabled"),document.body.classList.add("active"),e.classList.add("active")):(localStorage.setItem("darkMode",null),document.body.classList.remove("active"),e.classList.remove("active")),e.classList.contains("active")?n.textContent="Dark Mode":n.textContent="Light Mode"}));let t=localStorage.getItem("darkMode");const n=document.querySelector(".current-theme");"enabled"===t&&(localStorage.setItem("darkMode","enabled"),document.body.classList.add("active"),e.classList.add("active"),n.textContent="Dark Mode")})(),M(),(()=>{const e=document.querySelector("#add-dir-form"),t=document.querySelector(".directory");e.addEventListener("submit",L),t.addEventListener("click",q),t.addEventListener("click",E),t.addEventListener("click",b)})(),document.querySelector(".create-task-btn").addEventListener("click",(()=>{document.querySelector(".modal-container").classList.add("active")})),document.querySelector("#add-task").addEventListener("submit",u),s.addEventListener("click",(e=>{if("input"===e.target.tagName.toLowerCase()){const t=k.find((e=>e.id===p));t.tasks.find((t=>t.id===e.target.id)).complete=e.target.checked,S(),i(t)}})),s.addEventListener("click",l),document.querySelector(".delete-tasks").addEventListener("click",(()=>{const e=k.find((e=>e.id===p));e.tasks=e.tasks.filter((e=>!e.complete)),M()})),document.querySelector(".close-task-modal").addEventListener("click",(()=>{document.querySelector(".modal-container").classList.remove("active")})),t(),document.querySelector("#date").addEventListener("input",w),document.querySelector("#add-task").addEventListener("submit",(e=>{const t=document.querySelector("#task"),n=document.querySelector("#date");t.validity.valid||(e.preventDefault(),t.setCustomValidity("You must enter a task name"),t.reportValidity()),n.value.length>1&&(n.required=!0,!0===w()?(e.preventDefault(),w()):n.required=!1)})),document.querySelector(".date-edit").addEventListener("input",C),document.querySelector("#add-task").addEventListener("submit",(e=>{const t=document.querySelector(".task-edit"),n=document.querySelector(".date-edit");t.validity.valid||(e.preventDefault(),t.setCustomValidity("You must enter a task name"),t.reportValidity()),n.value.length>1&&(n.required=!0,!0===C()?(e.preventDefault(),C()):n.required=!1)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,