(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{N:()=>q,s:()=>x});const t=document.querySelector("#to-do-list"),n=document.querySelector(".to-do-title"),o=document.querySelector(".task-count"),r=document.querySelector(".tasks"),s=document.querySelector("#task-template"),c=e=>{const t=e.tasks.filter((e=>!e.complete)).length,n=1===t?"task":"tasks";o.textContent=`${t} ${n} remaining`},a=()=>{const e=m.find((e=>e.id===u));null==e?t.style.display="none":(t.style.display="",n.textContent=e.name,c(e),f(r),e.tasks.forEach((e=>{const t=document.importNode(s.content,!0),n=t.querySelector("input");n.id=e.id,n.checked=e.complete,t.querySelector(".task-name").textContent=e.name;const o=t.querySelector(".task-desc");e.desc?o.textContent=` Description: ${e.desc}`:o.textContent="No Description.";const c=t.querySelector(".task-date");e.date?c.textContent=` Complete by: ${e.date}`:c.textContent="No Completion Date.",r.appendChild(t)})))},l=(e,t,n)=>({id:Date.now().toString(),name:e,desc:t,date:n,complete:!1}),i="task.list",d="task.selectedFolder";let u=localStorage.getItem(d),m=JSON.parse(localStorage.getItem(i))||[];const v=()=>{y(),p()},y=()=>{localStorage.setItem(i,JSON.stringify(m)),localStorage.setItem(d,u)},p=()=>{const e=document.querySelector(".directory");f(e),m.forEach((t=>{const n=q("li",null,["directory-folder"],t.name);n.dataset.listId=t.id,t.id===u&&n.classList.add("directory-active"),e.appendChild(n);const o=q("span",null,["directory-folder-icons"],null);o.innerHTML='<button class="button-edit"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-edit" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" /><line x1="13.5" y1="6.5" x2="17.5" y2="10.5" /></svg></button><button class="button-trash"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-trash" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><line x1="4" y1="7" x2="20" y2="7" /><line x1="10" y1="11" x2="10" y2="17" /><line x1="14" y1="11" x2="14" y2="17" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg></button>',n.classList.contains("directory-active")&&n.appendChild(o)}))},f=e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},k=e=>{const t=document.querySelector(".add-dir-btn-text");e.preventDefault();const n=t.value;if(null==n||""===n)return;const o=L(n);t.value=null,m.push(o),v()},h=e=>{"li"===e.target.tagName.toLowerCase()&&(u=e.target.dataset.listId,v(),a())},g=e=>{e.target.classList.contains("icon-trash")&&e.target.parentElement.parentElement.parentElement.dataset.listId===u&&(m=m.filter((e=>e.id!==u)),u=null,x())},S=e=>{if(e.target.classList.contains("icon-edit")&&e.target.parentElement.parentElement.parentElement.dataset.listId===u){const e=document.querySelector(".directory-modal-container");e.classList.toggle("active");const t=document.querySelector("#directory-edit-form"),n=document.querySelector(".icon-tabler-square-x"),o=n=>{n.preventDefault();const r=document.querySelector("#text-dir"),s=r.value;null!=s&&""!==s&&(m.forEach((e=>{e.id===u&&(e.name=s)})),r.value=null,v(),e.classList.remove("active"),t.removeEventListener("submit",o))},r=()=>{e.classList.remove("active"),t.removeEventListener("submit",o),n.removeEventListener("click",r)};n.addEventListener("click",r),t.addEventListener("submit",o)}},L=e=>({id:Date.now().toString(),name:e,tasks:[]});function q(e,t,n,o){const r=document.createElement(e);return t&&(r.id=t),n&&n.forEach((e=>r.classList.add(e))),o&&(r.textContent=o),r}const x=()=>{v(),a()};(()=>{const e=document.querySelector(".light-dark-mode");e.addEventListener("click",(function(){document.body.classList.toggle("active"),e.classList.toggle("active");const t=document.querySelector(".current-theme");e.classList.contains("active")?t.textContent="Dark Mode":t.textContent="Light Mode"}))})(),x(),(()=>{const e=document.querySelector("#add-dir-form"),t=document.querySelector(".directory");e.addEventListener("submit",k),t.addEventListener("click",h),t.addEventListener("click",g),t.addEventListener("click",S)})(),document.querySelector(".create-task-btn").addEventListener("click",(()=>{document.querySelector(".modal-container").classList.add("active")})),document.querySelector("#add-task").addEventListener("submit",(e=>{e.preventDefault();const t=document.querySelector(".modal-container"),n=document.querySelector("#task"),o=document.querySelector("#description"),r=document.querySelector("#date"),s=n.value;if(null==s||""===s)return;const c=o.value,a=r.value,i=l(s,c,a);n.value=null,o.value=null,r.value=null,m.find((e=>e.id===u)).tasks.push(i),t.classList.remove("active"),x()})),r.addEventListener("click",(e=>{if("input"===e.target.tagName.toLowerCase()){const t=m.find((e=>e.id===u));t.tasks.find((t=>t.id===e.target.id)).complete=e.target.checked,y(),c(t)}})),document.querySelector(".delete-tasks").addEventListener("click",(()=>{const e=m.find((e=>e.id===u));e.tasks=e.tasks.filter((e=>!e.complete)),x()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,