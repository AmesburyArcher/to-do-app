(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{N:()=>h});const t="task.list",n="task.selectedFolder";let o=localStorage.getItem(n),r=JSON.parse(localStorage.getItem(t))||[];const l=()=>{a(),i()},a=()=>{localStorage.setItem(t,JSON.stringify(r)),localStorage.setItem(n,o)},i=()=>{const e=document.querySelector(".directory");s(e),r.forEach((t=>{const n=h("li",null,["directory-folder"],t.name);n.dataset.listId=t.id,t.id===o&&n.classList.add("directory-active"),e.appendChild(n);const r=h("span",null,["directory-folder-icons"],null);r.innerHTML='<button class="button-edit"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-edit" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" /><line x1="13.5" y1="6.5" x2="17.5" y2="10.5" /></svg></button><button class="button-trash"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-trash" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><line x1="4" y1="7" x2="20" y2="7" /><line x1="10" y1="11" x2="10" y2="17" /><line x1="14" y1="11" x2="14" y2="17" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg></button>',n.classList.contains("directory-active")&&n.appendChild(r)}))},s=e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},c=e=>{const t=document.querySelector(".add-dir-btn-text");e.preventDefault();const n=t.value;if(null==n||""===n)return;const o=f(n);t.value=null,r.push(o),l()},d=e=>{"li"===e.target.tagName.toLowerCase()&&(o=e.target.dataset.listId,l())},u=e=>{e.target.classList.contains("icon-trash")&&e.target.parentElement.parentElement.parentElement.dataset.listId===o&&(r=r.filter((e=>e.id!==o)),o=null,l())},m=e=>{if(e.target.classList.contains("icon-edit")&&e.target.parentElement.parentElement.parentElement.dataset.listId===o){document.querySelector(".directory-modal-container").classList.toggle("active");const e=document.querySelector("#directory-edit-form"),t=n=>{n.preventDefault();const a=document.querySelector("#text-dir"),i=a.value;null!=i&&""!==i&&(r.forEach((e=>{e.id===o&&(e.name=i)})),a.value=null,l(),document.querySelector(".directory-modal-container").classList.toggle("active"),e.removeEventListener("submit",t))};e.addEventListener("submit",t)}},f=e=>({id:Date.now().toString(),name:e,tasks:[]});function h(e,t,n,o){const r=document.createElement(e);return t&&(r.id=t),n&&n.forEach((e=>r.classList.add(e))),o&&(r.textContent=o),r}document.querySelector("#header"),document.querySelector("#sidebar"),document.querySelector("#main"),document.querySelector("#footer"),l(),(()=>{const e=document.querySelector("#add-dir-form"),t=document.querySelector(".directory");e.addEventListener("submit",c),t.addEventListener("click",d),t.addEventListener("click",u),t.addEventListener("click",m)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,