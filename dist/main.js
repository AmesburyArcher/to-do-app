(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(){const e=new Date;let t=1==e.getMinutes().toString().length?"0"+e.getMinutes():e.getMinutes(),n=1==e.getHours().toString().length?"0"+e.getHours():e.getHours(),o=e.getHours()>=12?"pm":"am";return["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][e.getDay()]+" "+["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.getMonth()]+" "+e.getDate()+" "+e.getFullYear()+" "+n+":"+t+o}e.d({},{N:()=>x,s:()=>E});const n=document.querySelector("#to-do-list"),o=document.querySelector(".to-do-title"),r=document.querySelector(".task-count"),s=document.querySelector(".tasks"),a=document.querySelector("#task-template"),c=e=>{const t=e.tasks.filter((e=>!e.complete)).length,n=1===t?"task":"tasks";r.textContent=`${t} ${n} remaining`},l=()=>{const e=v.find((e=>e.id===m));null==e?n.style.display="none":(n.style.display="",o.textContent=e.name,c(e),k(s),e.tasks.forEach((e=>{const t=document.importNode(a.content,!0),n=t.querySelector("input");n.id=e.id,n.checked=e.complete,t.querySelector(".task-name").textContent=e.name;const o=t.querySelector(".task-desc");e.desc?o.textContent=` Description: ${e.desc}`:o.textContent="No Description.";const r=t.querySelector(".task-date");e.date?r.textContent=` Complete by: ${e.date}`:r.textContent="No Completion Date.",t.querySelector(".task-posted").textContent=`Posted on: ${e.posted}`,t.querySelector(".edit-task").innerHTML='<svg xmlns="http://www.w3.org/2000/svg" class="edit-task-icon" width="20" height="20" viewBox="0 0 24 24" stroke-width="1.5" stroke="#000000" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" /><line x1="13.5" y1="6.5" x2="17.5" y2="10.5" /></svg>',s.appendChild(t)})))},i=(e,t,n,o)=>({id:Date.now().toString(),name:e,desc:t,date:n,posted:o,complete:!1}),d="task.list",u="task.selectedFolder";let m=localStorage.getItem(u),v=JSON.parse(localStorage.getItem(d))||[];const y=()=>{g(),p()},g=()=>{localStorage.setItem(d,JSON.stringify(v)),localStorage.setItem(u,m)},p=()=>{const e=document.querySelector(".directory");k(e),v.forEach((t=>{const n=x("li",null,["directory-folder"],t.name);n.dataset.listId=t.id,t.id===m&&n.classList.add("directory-active"),e.appendChild(n);const o=x("span",null,["directory-folder-icons"],null);o.innerHTML='<button class="button-edit"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-edit" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" /><line x1="13.5" y1="6.5" x2="17.5" y2="10.5" /></svg></button><button class="button-trash"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-trash" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><line x1="4" y1="7" x2="20" y2="7" /><line x1="10" y1="11" x2="10" y2="17" /><line x1="14" y1="11" x2="14" y2="17" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg></button>',n.classList.contains("directory-active")&&n.appendChild(o)}))},k=e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},h=e=>{const t=document.querySelector(".add-dir-btn-text");e.preventDefault();const n=t.value;if(null==n||""===n)return;const o=q(n);t.value=null,v.push(o),y()},f=e=>{"li"===e.target.tagName.toLowerCase()&&(m=e.target.dataset.listId,y(),l())},S=e=>{e.target.classList.contains("icon-trash")&&e.target.parentElement.parentElement.parentElement.dataset.listId===m&&(v=v.filter((e=>e.id!==m)),m=null,E())},L=e=>{if(e.target.classList.contains("icon-edit")&&e.target.parentElement.parentElement.parentElement.dataset.listId===m){const e=document.querySelector(".directory-modal-container");e.classList.toggle("active");const t=document.querySelector("#directory-edit-form"),n=document.querySelector(".icon-tabler-square-x"),o=n=>{n.preventDefault();const r=document.querySelector("#text-dir"),s=r.value;null!=s&&""!==s&&(v.forEach((e=>{e.id===m&&(e.name=s)})),r.value=null,y(),l(),e.classList.remove("active"),t.removeEventListener("submit",o))},r=()=>{e.classList.remove("active"),t.removeEventListener("submit",o),n.removeEventListener("click",r)};n.addEventListener("click",r),t.addEventListener("submit",o)}},q=e=>({id:Date.now().toString(),name:e,tasks:[]});function x(e,t,n,o){const r=document.createElement(e);return t&&(r.id=t),n&&n.forEach((e=>r.classList.add(e))),o&&(r.textContent=o),r}const E=()=>{y(),l()};(()=>{const e=document.querySelector(".light-dark-mode");e.addEventListener("click",(function(){document.body.classList.toggle("active"),e.classList.toggle("active");const t=document.querySelector(".current-theme");e.classList.contains("active")?t.textContent="Dark Mode":t.textContent="Light Mode"}))})(),E(),(()=>{const e=document.querySelector("#add-dir-form"),t=document.querySelector(".directory");e.addEventListener("submit",h),t.addEventListener("click",f),t.addEventListener("click",S),t.addEventListener("click",L)})(),document.querySelector(".create-task-btn").addEventListener("click",(()=>{document.querySelector(".modal-container").classList.add("active")})),document.querySelector("#add-task").addEventListener("submit",(e=>{e.preventDefault();const n=document.querySelector(".modal-container"),o=document.querySelector("#task"),r=document.querySelector("#description"),s=document.querySelector("#date"),a=t(),c=o.value;if(null==c||""===c)return;const l=r.value,d=s.value,u=i(c,l,d,a);o.value=null,r.value=null,s.value=null,v.find((e=>e.id===m)).tasks.push(u),n.classList.remove("active"),E()})),s.addEventListener("click",(e=>{if("input"===e.target.tagName.toLowerCase()){const t=v.find((e=>e.id===m));t.tasks.find((t=>t.id===e.target.id)).complete=e.target.checked,g(),c(t)}})),s.addEventListener("click",(e=>{const t=v.find((e=>e.id===m)),n=e.target.parentNode.parentNode,o=Array.from(n.parentNode.children).indexOf(n),r=document.querySelector(".task-edit"),s=document.querySelector(".description-edit"),a=document.querySelector(".date-edit");let c=t.tasks[o];const i=document.querySelector(".modal-container-edit"),d=document.querySelector("#add-task-edit");if(e.target.classList.contains("edit-task-icon")){r.value=c.name,c.desc?s.value=c.desc:s.value="",c.date?a.value=c.date:a.value="",i.classList.add("active");const e=t=>{console.log(o),t.preventDefault(),c.name=r.value,c.desc=s.value,c.date=a.value,c="",console.log(c),i.classList.remove("active"),d.removeEventListener("submit",e),l(),g()};d.addEventListener("submit",e)}})),document.querySelector(".delete-tasks").addEventListener("click",(()=>{const e=v.find((e=>e.id===m));e.tasks=e.tasks.filter((e=>!e.complete)),E()})),document.querySelector(".close-task-modal").addEventListener("click",(()=>{document.querySelector(".modal-container").classList.remove("active")})),document.querySelector(".current-date").textContent=t()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,