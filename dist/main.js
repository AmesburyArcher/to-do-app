(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{N:()=>d});let t=[{id:1,name:"name"},{id:2,name:"todo"}];const r=()=>{const e=document.querySelector(".directory");o(e),t.forEach((r=>{const o=d("li",null,["directory-folder","directory-active"],r.name);o.dataset.listId=t.id,e.appendChild(o)}))},o=e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},n=e=>({id:Date.now().toString(),name:e,tasks:[]});function d(e,t,r,o){const n=document.createElement(e);return t&&(n.id=t),r&&r.forEach((e=>n.classList.add(e))),o&&(n.textContent=o),n}document.querySelector("#header"),document.querySelector("#sidebar"),document.querySelector("#main"),document.querySelector("#footer"),r(),document.querySelector("#add-dir-form").addEventListener("submit",(e=>{const o=document.querySelector(".add-dir-btn-text");e.preventDefault();const d=o.value;if(null==d||""===d)return;const c=n(d);o.value=null,t.push(c),r()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQ0EsSUFBSUEsRUFBc0IsQ0NBMUJBLEVBQXdCLENBQUNDLEVBQVNDLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWEYsRUFBb0JJLEVBQUVGLEVBQVlDLEtBQVNILEVBQW9CSSxFQUFFSCxFQUFTRSxJQUM1RUUsT0FBT0MsZUFBZUwsRUFBU0UsRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLE1DSjNFSCxFQUF3QixDQUFDUyxFQUFLQyxJQUFVTCxPQUFPTSxVQUFVQyxlQUFlQyxLQUFLSixFQUFLQyxJLGtCQ0VsRixJQUFJSSxFQUFlLENBQ2YsQ0FDSUMsR0FBSSxFQUNKQyxLQUFNLFFBQ1AsQ0FDQ0QsR0FBSSxFQUNKQyxLQUFNLFNBSWQsTUFBTUMsRUFBYyxLQUNoQixNQUFNQyxFQUFxQkMsU0FBU0MsY0FBYyxjQUVsREMsRUFBVUgsR0FDVkosRUFBYVEsU0FBUUMsSUFDbEIsTUFBTUMsRUFBa0JDLEVBQWtCLEtBQU0sS0FBTSxDQUFDLG1CQUFvQixvQkFBcUJGLEVBQVVQLE1BQzFHUSxFQUFnQkUsUUFBUUMsT0FBU2IsRUFBYUMsR0FDOUNHLEVBQW1CVSxZQUFZSixPQUloQ0gsRUFBYVEsSUFDZixLQUFNQSxFQUFLQyxZQUNQRCxFQUFLRSxZQUFZRixFQUFLQyxhQXNCeEJFLEVBQWdCQyxJQUNaLENBQUVsQixHQUFJbUIsS0FBS0MsTUFBTUMsV0FBWXBCLEtBQU1pQixFQUFLSSxNQUFPLEtDeEN6RCxTQUFTWixFQUFrQmEsRUFBTXZCLEVBQUl3QixFQUFTQyxHQUMxQyxNQUFNQyxFQUFVdEIsU0FBU3VCLGNBQWNKLEdBUXZDLE9BTkd2QixJQUFJMEIsRUFBUTFCLEdBQUtBLEdBQ2pCd0IsR0FDQ0EsRUFBUWpCLFNBQVNxQixHQUFZRixFQUFRRyxVQUFVQyxJQUFJRixLQUVwREgsSUFBU0MsRUFBUUssWUFBY04sR0FFM0JDLEVBZEl0QixTQUFTQyxjQUFjLFdBQ3RCRCxTQUFTQyxjQUFjLFlBQzFCRCxTQUFTQyxjQUFjLFNBQ3JCRCxTQUFTQyxjQUFjLFdBZXRDSCxJRFNvQkUsU0FBU0MsY0FBYyxpQkFFL0IyQixpQkFBaUIsVUFHSkMsSUFDckIsTUFBTUMsRUFBVTlCLFNBQVNDLGNBQWMscUJBRXZDNEIsRUFBRUUsaUJBQ0YsTUFBTUMsRUFBVUYsRUFBUUcsTUFDeEIsR0FBYyxNQUFYRCxHQUErQixLQUFaQSxFQUFnQixPQUN0QyxNQUFNNUIsRUFBWVMsRUFBYW1CLEdBQy9CRixFQUFRRyxNQUFRLEtBQ2hCdEMsRUFBYXVDLEtBQUs5QixHQUNsQk4sUSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvLWRvLWFwcC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90by1kby1hcHAvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvLWRvLWFwcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvLWRvLWFwcC8uL3NyYy9kaXJlY3RvcnktY3JlYXRvci5qcyIsIndlYnBhY2s6Ly90by1kby1hcHAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIHJlcXVpcmUgc2NvcGVcbnZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJpbXBvcnQgeyBjcmVhdGVIVE1MRWxlbWVudCB9IGZyb20gXCIuL2luZGV4XCI7XG5cbmxldCBkaXJlY3RvcnlBcnIgPSBbXG4gICAge1xuICAgICAgICBpZDogMSxcbiAgICAgICAgbmFtZTogJ25hbWUnXG4gICAgfSwge1xuICAgICAgICBpZDogMixcbiAgICAgICAgbmFtZTogJ3RvZG8nXG4gICAgfVxuXVxuXG5jb25zdCByZW5kZXJMaXN0cyA9ICgpID0+IHtcbiAgICBjb25zdCBkaXJlY3RvcnlDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGlyZWN0b3J5Jyk7XG5cbiAgICBjbGVhckxpc3QoZGlyZWN0b3J5Q29udGFpbmVyKTtcbiAgICBkaXJlY3RvcnlBcnIuZm9yRWFjaChkaXJlY3RvcnkgPT4ge1xuICAgICAgIGNvbnN0IGRpcmVjdG9yeUZvbGRlciA9IGNyZWF0ZUhUTUxFbGVtZW50KCdsaScsIG51bGwsIFsnZGlyZWN0b3J5LWZvbGRlcicsICdkaXJlY3RvcnktYWN0aXZlJ10sIGRpcmVjdG9yeS5uYW1lKVxuICAgICAgIGRpcmVjdG9yeUZvbGRlci5kYXRhc2V0Lmxpc3RJZCA9IGRpcmVjdG9yeUFyci5pZDtcbiAgICAgICBkaXJlY3RvcnlDb250YWluZXIuYXBwZW5kQ2hpbGQoZGlyZWN0b3J5Rm9sZGVyKTsgXG4gICAgfSlcbn07XG5cbmNvbnN0IGNsZWFyTGlzdCA9IChsaXN0KSA9PiB7XG4gICAgd2hpbGUobGlzdC5maXJzdENoaWxkKSB7XG4gICAgICAgIGxpc3QucmVtb3ZlQ2hpbGQobGlzdC5maXJzdENoaWxkKVxuICAgIH1cbn07XG5cbmNvbnN0IGNyZWF0ZURpckxpc3RlbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGRpckZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkLWRpci1mb3JtJyk7XG5cbiAgICBkaXJGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGNyZWF0ZURpcmVjdG9yeSlcbn1cblxuY29uc3QgY3JlYXRlRGlyZWN0b3J5ID0gKGUpID0+IHtcbiAgICBjb25zdCBkaXJUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1kaXItYnRuLXRleHQnKTtcblxuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBkaXJOYW1lID0gZGlyVGV4dC52YWx1ZTtcbiAgICBpZihkaXJOYW1lID09IG51bGwgfHwgZGlyTmFtZSA9PT0gJycpIHJldHVybjtcbiAgICBjb25zdCBkaXJlY3RvcnkgPSBjcmVhdGVOZXdEaXIoZGlyTmFtZSk7XG4gICAgZGlyVGV4dC52YWx1ZSA9IG51bGw7XG4gICAgZGlyZWN0b3J5QXJyLnB1c2goZGlyZWN0b3J5KTtcbiAgICByZW5kZXJMaXN0cygpO1xufVxuXG5jb25zdCBjcmVhdGVOZXdEaXIgPSAoZGlyKSA9PiB7XG4gICByZXR1cm4geyBpZDogRGF0ZS5ub3coKS50b1N0cmluZygpLCBuYW1lOiBkaXIsIHRhc2tzOiBbXSB9XG59XG5cbmV4cG9ydCB7IHJlbmRlckxpc3RzLCBjcmVhdGVEaXJMaXN0ZW5lciB9IiwiaW1wb3J0IHsgcmVuZGVyTGlzdHMsIGNyZWF0ZURpckxpc3RlbmVyIH0gZnJvbSBcIi4vZGlyZWN0b3J5LWNyZWF0b3JcIjtcblxuXG5jb25zdCBoZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaGVhZGVyJyk7XG5jb25zdCBzaWRlYmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NpZGViYXInKTtcbmNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbWFpbicpO1xuY29uc3QgZm9vdGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvb3RlcicpO1xuXG5mdW5jdGlvbiBjcmVhdGVIVE1MRWxlbWVudCh0eXBlLCBpZCwgY2xhc3NlcywgY29udGVudCkge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHR5cGUpO1xuXG4gICAgaWYoaWQpIGVsZW1lbnQuaWQgPSBpZDtcbiAgICBpZihjbGFzc2VzKSB7XG4gICAgICAgIGNsYXNzZXMuZm9yRWFjaCgobXlDbGFzcykgPT4gZWxlbWVudC5jbGFzc0xpc3QuYWRkKG15Q2xhc3MpKTtcbiAgICB9O1xuICAgIGlmKGNvbnRlbnQpIGVsZW1lbnQudGV4dENvbnRlbnQgPSBjb250ZW50O1xuXG4gICAgcmV0dXJuIGVsZW1lbnQ7XG59O1xuXG5cbnJlbmRlckxpc3RzKCk7XG5jcmVhdGVEaXJMaXN0ZW5lcigpO1xuXG5leHBvcnQge1xuICAgIGNyZWF0ZUhUTUxFbGVtZW50XG59Il0sIm5hbWVzIjpbIl9fd2VicGFja19yZXF1aXJlX18iLCJleHBvcnRzIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGlyZWN0b3J5QXJyIiwiaWQiLCJuYW1lIiwicmVuZGVyTGlzdHMiLCJkaXJlY3RvcnlDb250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbGVhckxpc3QiLCJmb3JFYWNoIiwiZGlyZWN0b3J5IiwiZGlyZWN0b3J5Rm9sZGVyIiwiY3JlYXRlSFRNTEVsZW1lbnQiLCJkYXRhc2V0IiwibGlzdElkIiwiYXBwZW5kQ2hpbGQiLCJsaXN0IiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiY3JlYXRlTmV3RGlyIiwiZGlyIiwiRGF0ZSIsIm5vdyIsInRvU3RyaW5nIiwidGFza3MiLCJ0eXBlIiwiY2xhc3NlcyIsImNvbnRlbnQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsIm15Q2xhc3MiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0ZXh0Q29udGVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiZGlyVGV4dCIsInByZXZlbnREZWZhdWx0IiwiZGlyTmFtZSIsInZhbHVlIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=