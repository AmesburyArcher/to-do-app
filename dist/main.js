(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{N:()=>x,s:()=>E});const t=document.querySelector("#to-do-list"),n=document.querySelector(".to-do-title"),o=document.querySelector(".task-count"),r=document.querySelector(".tasks"),c=document.querySelector("#task-template"),s=()=>{const e=v.find((e=>e.id===m));null==e?t.style.display="none":(t.style.display="",n.textContent=e.name,(e=>{const t=e.tasks.filter((e=>!e.complete)).length,n=1===t?"task":"tasks";o.textContent=`${t} ${n} remaining`})(e),h(r),e.tasks.forEach((e=>{const t=document.importNode(c.content,!0),n=t.querySelector("input");n.id=e.id,n.checked=e.complete,t.querySelector(".task-name").textContent=e.name;const o=t.querySelector(".task-desc");e.desc?o.textContent=` Description: ${e.desc}`:o.textContent="No Description.";const s=t.querySelector(".task-date");e.date?s.textContent=` Complete by: ${e.date}`:s.textContent="No Completion Date.",r.appendChild(t)})))},l=()=>{document.querySelector(".modal-container").classList.add("active")},a=e=>{e.preventDefault();const t=document.querySelector(".modal-container"),n=document.querySelector("#task"),o=document.querySelector("#description"),r=document.querySelector("#date"),c=n.value;if(null==c||""===c)return;const s=o.value,l=r.value,a=i(c,s,l);n.value=null,o.value=null,r.value=null,v.find((e=>e.id===m)).tasks.push(a),t.classList.remove("active"),E()},i=(e,t,n)=>({id:Date.now().toString(),name:e,desc:t,date:n,complete:!1}),d="task.list",u="task.selectedFolder";let m=localStorage.getItem(u),v=JSON.parse(localStorage.getItem(d))||[];const y=()=>{p(),f()},p=()=>{localStorage.setItem(d,JSON.stringify(v)),localStorage.setItem(u,m)},f=()=>{const e=document.querySelector(".directory");h(e),v.forEach((t=>{const n=x("li",null,["directory-folder"],t.name);n.dataset.listId=t.id,t.id===m&&n.classList.add("directory-active"),e.appendChild(n);const o=x("span",null,["directory-folder-icons"],null);o.innerHTML='<button class="button-edit"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-edit" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" /><line x1="13.5" y1="6.5" x2="17.5" y2="10.5" /></svg></button><button class="button-trash"><svg xmlns="http://www.w3.org/2000/svg" class="icon icon-trash" width="18" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><line x1="4" y1="7" x2="20" y2="7" /><line x1="10" y1="11" x2="10" y2="17" /><line x1="14" y1="11" x2="14" y2="17" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg></button>',n.classList.contains("directory-active")&&n.appendChild(o)}))},h=e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},g=e=>{const t=document.querySelector(".add-dir-btn-text");e.preventDefault();const n=t.value;if(null==n||""===n)return;const o=q(n);t.value=null,v.push(o),y()},k=e=>{"li"===e.target.tagName.toLowerCase()&&(m=e.target.dataset.listId,y(),s())},S=e=>{e.target.classList.contains("icon-trash")&&e.target.parentElement.parentElement.parentElement.dataset.listId===m&&(v=v.filter((e=>e.id!==m)),m=null,E())},L=e=>{if(e.target.classList.contains("icon-edit")&&e.target.parentElement.parentElement.parentElement.dataset.listId===m){const e=document.querySelector(".directory-modal-container");e.classList.toggle("active");const t=document.querySelector("#directory-edit-form"),n=document.querySelector(".icon-tabler-square-x");console.log("click");const o=n=>{n.preventDefault();const r=document.querySelector("#text-dir"),c=r.value;null!=c&&""!==c&&(v.forEach((e=>{e.id===m&&(e.name=c)})),r.value=null,y(),e.classList.remove("active"),t.removeEventListener("submit",o))},r=()=>{e.classList.remove("active"),t.removeEventListener("submit",o),n.removeEventListener("click",r)};n.addEventListener("click",r),t.addEventListener("submit",o)}},q=e=>({id:Date.now().toString(),name:e,tasks:[]});function x(e,t,n,o){const r=document.createElement(e);return t&&(r.id=t),n&&n.forEach((e=>r.classList.add(e))),o&&(r.textContent=o),r}const E=()=>{y(),s()};(()=>{const e=document.querySelector(".light-dark-mode");e.addEventListener("click",(function(){document.body.classList.toggle("active"),e.classList.toggle("active");const t=document.querySelector(".current-theme");e.classList.contains("active")?t.textContent="Dark Mode":t.textContent="Light Mode"}))})(),E(),(()=>{const e=document.querySelector("#add-dir-form"),t=document.querySelector(".directory");e.addEventListener("submit",g),t.addEventListener("click",k),t.addEventListener("click",S),t.addEventListener("click",L)})(),document.querySelector(".create-task-btn").addEventListener("click",l),document.querySelector("#add-task").addEventListener("submit",a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,